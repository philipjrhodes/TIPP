CXX = mpic++
EXE = TIPP

SRC = $(wildcard *.cpp) $(wildcard **/*.cpp)
#OBJ = $(patsubst %.cpp, %.o, $(SRC))
OBJ = $(%.o)
#CXXFLAGS = -std=gnu++11 -Wall -pg
CXXFLAGS = -std=gnu++11
all: $(EXE)

$(EXE): delaunay2DMain.o delaunayMPI.o domain.o coarsePartition.o partition.o triangle.o boundingBox.o gridBound.o gridElement.o linkList.o edge.o common.o point.o
	$(CXX) $(CXXFLAGS) -o $@ $^

delaunay2DMain.o: delaunay2DMain.cpp
	$(CXX) $(CXXFLAGS) -o $@ -c $<

delaunayMPI.o: delaunayMPI.cpp delaunayMPI.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

domain.o: domain.cpp domain.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

coarsePartition.o: coarsePartition.cpp coarsePartition.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

partition.o: partition.cpp partition.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

triangle.o: triangle.cpp triangle.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

boundingBox.o: boundingBox.cpp boundingBox.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

gridBound.o: gridBound.cpp gridBound.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

gridElement.o: gridElement.cpp
	$(CXX) $(CXXFLAGS) -o $@ -c $<

edge.o: edge.cpp edge.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

linkList.o: linkList.cpp linkList.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<

common.o: common.cpp common.h 
	$(CXX) $(CXXFLAGS) -o $@ -c $<

point.o: point.cpp point.h
	$(CXX) $(CXXFLAGS) -o $@ -c $<


dir:
	mkdir -p $(BUILD_DIR)
clean:
	rm -rf $(EXE) *.o

