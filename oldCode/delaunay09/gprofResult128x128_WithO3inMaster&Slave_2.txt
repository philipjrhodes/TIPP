Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 12.65      2.66     2.66                             domain::updateTriangleArr()
 11.53      5.09     2.43 2643947472     0.00     0.00  point::point(point const&)
  9.18      7.02     1.93                             domain::updateConflictPartitions()
  6.61      8.41     1.39                             domain::deliverTriangles()
  5.16      9.49     1.09 285738646     0.00     0.00  edge::operator==(edge const&)
  4.19     10.37     0.88 1301666138     0.00     0.00  point::getX()
  4.14     11.24     0.87   425980     0.00     0.01  domain::basicTriangulate(point)
  3.71     12.02     0.78 1285225139     0.00     0.00  point::getY()
  3.71     12.80     0.78 405384881     0.00     0.00  triangle::circumCircleContains(point)
  3.42     13.52     0.72                             domain::generateConflictPartitions()
  3.19     14.19     0.67                             domain::generateIntersection()
  2.47     14.71     0.52 536038890     0.00     0.00  boundingBox::getLowPoint()
  2.38     15.21     0.50 42831207     0.00     0.00  domain::mapLow(boundingBox, double, double)
  2.26     15.69     0.48 84676186     0.00     0.00  triangle::computeCenterRadius()
  2.05     16.12     0.43 450605716     0.00     0.00  boundingBox::getHighPoint()
  1.69     16.47     0.36 42831207     0.00     0.00  domain::boundingGrid(boundingBox)
  1.59     16.81     0.34 342365957     0.00     0.00  point::point()
  1.57     17.14     0.33    16384     0.02     0.02  std::list<unsigned int, std::allocator<unsigned int> >::operator=(std::list<unsigned int, std::allocator<unsigned int> > const&)
  1.52     17.46     0.32       34     9.41    11.27  domain::storeActiveParitions(int*, int, unsigned int)
  1.40     17.75     0.30 406203483     0.00     0.00  triangle::getFarestCoorX()
  1.38     18.04     0.29                             domain::generateActivePartitions()
  1.33     18.32     0.28 638907036     0.00     0.00  point::operator==(point)
  1.31     18.60     0.28 42831207     0.00     0.00  domain::mapHigh(boundingBox, double, double)
  1.17     18.84     0.25 102488313     0.00     0.00  point::set(point)
  1.14     19.08     0.24 42831207     0.00     0.00  triangle::triangle(triangle const&)
  0.93     19.28     0.20 342649656     0.00     0.00  gridElement::gridElement(gridElement const&)
  0.69     19.42     0.15 85662414     0.00     0.00  gridBound::getHighGridElement()
  0.69     19.57     0.15 118136808     0.00     0.00  point::point(double, double)
  0.67     19.71     0.14 22427168     0.00     0.00  triangle::intersect(boundingBox)
  0.48     19.81     0.10 85662414     0.00     0.00  gridElement::getY()
  0.48     19.91     0.10                             domain::processDelaunayMPI(int)
  0.45     20.00     0.10 85662414     0.00     0.00  gridBound::getLowGridElement()
  0.43     20.09     0.09 85662414     0.00     0.00  gridElement::getX()
  0.43     20.18     0.09 85662414     0.00     0.00  gridElement::gridElement(int, int)
  0.36     20.26     0.08 22427168     0.00     0.00  boundingBox::boundingBox(double, double, double, double)
  0.36     20.33     0.08 102488319     0.00     0.00  point::point(double, double, unsigned long long)
  0.33     20.40     0.07 104947443     0.00     0.00  point::getId()
  0.29     20.46     0.06    98304     0.00     0.00  std::list<unsigned int, std::allocator<unsigned int> >::sort()
  0.29     20.52     0.06                             domain::triangleTransform()
  0.19     20.56     0.04 42831207     0.00     0.00  boundingBox::boundingBox(point, point)
  0.19     20.60     0.04  9062661     0.00     0.00  edge::edge(point const&, point const&)
  0.17     20.64     0.04  5221558     0.00     0.00  edge::edge(edge const&)
  0.14     20.67     0.03 42831207     0.00     0.00  gridBound::gridBound(gridElement, gridElement)
  0.14     20.70     0.03 14284219     0.00     0.00  createNewNode(edge*)
  0.14     20.73     0.03   851960     0.00     0.00  removeLinkList(edgeNode*&)
  0.14     20.76     0.03        1    30.01    30.01  size(triangleNode*)
  0.12     20.78     0.03  3841105     0.00     0.00  triangle::triangle(point const&, point const&, point const&)
  0.10     20.80     0.02 45280318     0.00     0.00  point::setY(double)
  0.10     20.82     0.02  3841103     0.00     0.00  triangle::colinear()
  0.10     20.84     0.02  3840595     0.00     0.00  createNewNode(triangle*)
  0.10     20.86     0.02   425980     0.00     0.00  point::setId(unsigned long long)
  0.10     20.88     0.02        1    20.00    20.00  boundingBox::setHighPoint(point)
  0.10     20.90     0.02                             removeLinkList(triangleNode*&)
  0.10     20.92     0.02                             coorX_comparison(void const*, void const*)
  0.07     20.94     0.02                             triangle::area()
  0.07     20.95     0.02                             triangle::inside(boundingBox)
  0.07     20.97     0.02                             gridBound::elementCount()
  0.05     20.98     0.01  5221558     0.00     0.00  removeNode(edgeNode*&, edgeNode*&, edgeNode*&)
  0.05     20.99     0.01  3020887     0.00     0.00  removeNode(triangleNode*&, triangleNode*&, triangleNode*&)
  0.05     21.00     0.01                             gridElement::setY(int)
  0.05     21.01     0.01                             domain::initTriangulateAdvance()
  0.05     21.02     0.01                             domain::drawActivePartTriangles()
  0.05     21.03     0.01                             std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
  0.02     21.03     0.01 45280318     0.00     0.00  point::setX(double)
  0.00     21.03     0.00 14284219     0.00     0.00  insertFront(edgeNode*&, edgeNode*)
  0.00     21.03     0.00  4659199     0.00     0.00  insertFront(triangleNode*&, triangleNode*)
  0.00     21.03     0.00  3840595     0.00     0.00  triangle::isBad()
  0.00     21.03     0.00  3020887     0.00     0.00  triangle::getEdge1()
  0.00     21.03     0.00  3020887     0.00     0.00  triangle::getEdge2()
  0.00     21.03     0.00  3020887     0.00     0.00  triangle::getEdge3()
  0.00     21.03     0.00   818602     0.00     0.00  extractNode(triangleNode*&, triangleNode*, triangleNode*&)
  0.00     21.03     0.00    16384     0.00     0.00  partition::partition()
  0.00     21.03     0.00    16384     0.00     0.00  partition::~partition()
  0.00     21.03     0.00    16384     0.00     0.00  std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int const&>(int const&)
  0.00     21.03     0.00       68     0.00     0.00  GetWallClockTime()
  0.00     21.03     0.00       68     0.00     0.00  domain::addFile(std::string, std::string, std::string)
  0.00     21.03     0.00       34     0.00     0.00  domain::runDelaunayMPI(int)
  0.00     21.03     0.00       34     0.00     0.00  domain::collectStoreTriangleIds()
  0.00     21.03     0.00       34     0.00     0.00  domain::storeActiveParitionInfo(int, int*, int*, int*)
  0.00     21.03     0.00       34     0.00     0.00  std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
  0.00     21.03     0.00        7     0.00     0.00  std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
  0.00     21.03     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z13createNewNodeP4edge
  0.00     21.03     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN11boundingBoxC2E5pointS0_
  0.00     21.03     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4edgeC2ERK5pointS2_
  0.00     21.03     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5pointC2Eddy
  0.00     21.03     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN6domainC2EddddSs
  0.00     21.03     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN9gridBoundC2E11gridElementS0_
  0.00     21.03     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN9partitionC2Ev
  0.00     21.03     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00     21.03     0.00        1     0.00     0.00  _GLOBAL__sub_I_max
  0.00     21.03     0.00        1     0.00     0.00  addLinkList(triangleNode*&, triangleNode*&)
  0.00     21.03     0.00        1     0.00     0.00  boundingBox::setLowPoint(point)
  0.00     21.03     0.00        1     0.00     0.00  domain::readPointPartFileInfo()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.05% of 21.03 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     32.6    0.67    6.19                 domain::generateIntersection() [1]
                0.36    3.53 42831207/42831207     domain::boundingGrid(boundingBox) [4]
                0.14    0.38 22427168/22427168     triangle::intersect(boundingBox) [20]
                0.24    0.16 42831207/84676186     triangle::computeCenterRadius() [17]
                0.24    0.13 42831207/42831207     triangle::triangle(triangle const&) [22]
                0.15    0.05 85662414/85662414     gridBound::getHighGridElement() [30]
                0.16    0.00 173347957/2643947472     point::point(point const&) [6]
                0.10    0.05 85662414/85662414     gridBound::getLowGridElement() [32]
                0.08    0.06 22427168/22427168     boundingBox::boundingBox(double, double, double, double) [33]
                0.11    0.00 85662414/118136808     point::point(double, double) [31]
                0.10    0.00 85662414/85662414     gridElement::getY() [34]
                0.09    0.00 85662414/85662414     gridElement::getX() [36]
                0.04    0.04 42831207/42831207     boundingBox::boundingBox(point, point) [38]
                0.01    0.00 22427168/45280318     point::setY(double) [52]
                0.00    0.00      24/536038890     boundingBox::getLowPoint() [12]
                0.00    0.00      12/450605716     boundingBox::getHighPoint() [15]
                0.00    0.00      18/1301666138     point::getX() [14]
                0.00    0.00      18/1285225139     point::getY() [18]
-----------------------------------------------
                                                 <spontaneous>
[2]     24.6    0.01    5.16                 domain::initTriangulateAdvance() [2]
                0.87    4.27  425980/425980      domain::basicTriangulate(point) [3]
                0.02    0.00  425980/425980      point::setId(unsigned long long) [54]
                0.00    0.00  835580/2643947472     point::point(point const&) [6]
                0.00    0.00  425980/342365957     point::point() [23]
                0.00    0.00  409600/1301666138     point::getX() [14]
                0.00    0.00  409600/1285225139     point::getY() [18]
                0.00    0.00  425980/45280318     point::setY(double) [52]
                0.00    0.00  425980/45280318     point::setX(double) [68]
-----------------------------------------------
                0.87    4.27  425980/425980      domain::initTriangulateAdvance() [2]
[3]     24.4    0.87    4.27  425980         domain::basicTriangulate(point) [3]
                1.09    0.87 285738646/285738646     edge::operator==(edge const&) [7]
                0.78    0.52 405384881/405384881     triangle::circumCircleContains(point) [11]
                0.37    0.00 405384881/2643947472     point::point(point const&) [6]
                0.30    0.00 406203483/406203483     triangle::getFarestCoorX() [25]
                0.04    0.03 7682206/84676186     triangle::computeCenterRadius() [17]
                0.04    0.01 5221558/5221558     edge::edge(edge const&) [44]
                0.03    0.01 3841103/3841105     triangle::triangle(point const&, point const&, point const&) [45]
                0.02    0.01 3841103/3841103     triangle::colinear() [46]
                0.03    0.00 14284219/14284219     createNewNode(edge*) [47]
                0.03    0.00  851960/851960      removeLinkList(edgeNode*&) [48]
                0.02    0.00 3840595/3840595     createNewNode(triangle*) [53]
                0.00    0.02 3020887/3020887     triangle::getEdge1() [57]
                0.00    0.02 3020887/3020887     triangle::getEdge2() [58]
                0.00    0.02 3020887/3020887     triangle::getEdge3() [59]
                0.01    0.00 5221558/5221558     removeNode(edgeNode*&, edgeNode*&, edgeNode*&) [63]
                0.01    0.00 3020887/3020887     removeNode(triangleNode*&, triangleNode*&, triangleNode*&) [64]
                0.00    0.00  425980/1301666138     point::getX() [14]
                0.00    0.00 14284219/14284219     insertFront(edgeNode*&, edgeNode*) [77]
                0.00    0.00 4659197/4659199     insertFront(triangleNode*&, triangleNode*) [78]
                0.00    0.00 3840595/3840595     triangle::isBad() [79]
                0.00    0.00  818602/818602      extractNode(triangleNode*&, triangleNode*, triangleNode*&) [80]
-----------------------------------------------
                0.36    3.53 42831207/42831207     domain::generateIntersection() [1]
[4]     18.4    0.36    3.53 42831207         domain::boundingGrid(boundingBox) [4]
                0.50    1.34 42831207/42831207     domain::mapLow(boundingBox, double, double) [9]
                0.28    0.69 42831207/42831207     domain::mapHigh(boundingBox, double, double) [13]
                0.08    0.08 85662414/536038890     boundingBox::getLowPoint() [12]
                0.08    0.08 85662414/450605716     boundingBox::getHighPoint() [15]
                0.16    0.00 171324828/2643947472     point::point(point const&) [6]
                0.07    0.00 128493621/342649656     gridElement::gridElement(gridElement const&) [29]
                0.06    0.00 85662414/1301666138     point::getX() [14]
                0.03    0.02 42831207/42831207     gridBound::gridBound(gridElement, gridElement) [43]
                0.05    0.00 85662414/1285225139     point::getY() [18]
-----------------------------------------------
                                                 <spontaneous>
[5]     16.7    2.66    0.86                 domain::updateTriangleArr() [5]
                0.19    0.13 34162771/84676186     triangle::computeCenterRadius() [17]
                0.25    0.00 102488313/102488313     point::set(point) [28]
                0.12    0.00 126041133/342365957     point::point() [23]
                0.09    0.00 102488313/2643947472     point::point(point const&) [6]
                0.08    0.00 102488313/102488319     point::point(double, double, unsigned long long) [39]
                0.00    0.00       6/7           std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [90]
-----------------------------------------------
                0.00    0.00  835580/2643947472     domain::initTriangulateAdvance() [2]
                0.04    0.00 42831207/2643947472     boundingBox::boundingBox(point, point) [38]
                0.09    0.00 102488313/2643947472     domain::updateTriangleArr() [5]
                0.11    0.00 122183064/2643947472     triangle::intersect(boundingBox) [20]
                0.16    0.00 171324828/2643947472     domain::boundingGrid(boundingBox) [4]
                0.16    0.00 173347957/2643947472     domain::generateIntersection() [1]
                0.37    0.00 405384881/2643947472     domain::basicTriangulate(point) [3]
                0.41    0.00 450605716/2643947472     boundingBox::getHighPoint() [15]
                0.49    0.00 536038890/2643947472     boundingBox::getLowPoint() [12]
                0.59    0.00 638907036/2643947472     edge::operator==(edge const&) [7]
[6]     11.5    2.43    0.00 2643947472         point::point(point const&) [6]
-----------------------------------------------
                1.09    0.87 285738646/285738646     domain::basicTriangulate(point) [3]
[7]      9.3    1.09    0.87 285738646         edge::operator==(edge const&) [7]
                0.59    0.00 638907036/2643947472     point::point(point const&) [6]
                0.28    0.00 638907036/638907036     point::operator==(point) [27]
-----------------------------------------------
                                                 <spontaneous>
[8]      9.2    1.93    0.00                 domain::updateConflictPartitions() [8]
-----------------------------------------------
                0.50    1.34 42831207/42831207     domain::boundingGrid(boundingBox) [4]
[9]      8.7    0.50    1.34 42831207         domain::mapLow(boundingBox, double, double) [9]
                0.33    0.31 342516122/450605716     boundingBox::getHighPoint() [15]
                0.17    0.16 171191294/536038890     boundingBox::getLowPoint() [12]
                0.17    0.00 256846404/1301666138     point::getX() [14]
                0.16    0.00 256861012/1285225139     point::getY() [18]
                0.05    0.00 42831207/85662414     gridElement::gridElement(int, int) [37]
-----------------------------------------------
                                                 <spontaneous>
[10]     6.8    1.39    0.05                 domain::deliverTriangles() [10]
                0.05    0.00 72509820/104947443     point::getId() [40]
-----------------------------------------------
                0.78    0.52 405384881/405384881     domain::basicTriangulate(point) [3]
[11]     6.2    0.78    0.52 405384881         triangle::circumCircleContains(point) [11]
                0.27    0.00 405384881/1301666138     point::getX() [14]
                0.25    0.00 405384881/1285225139     point::getY() [18]
-----------------------------------------------
                0.00    0.00      24/536038890     domain::generateIntersection() [1]
                0.02    0.02 22427168/536038890     triangle::intersect(boundingBox) [20]
                0.08    0.08 85662414/536038890     domain::boundingGrid(boundingBox) [4]
                0.17    0.16 171191294/536038890     domain::mapLow(boundingBox, double, double) [9]
                0.25    0.24 256757990/536038890     domain::mapHigh(boundingBox, double, double) [13]
[12]     4.8    0.52    0.49 536038890         boundingBox::getLowPoint() [12]
                0.49    0.00 536038890/2643947472     point::point(point const&) [6]
-----------------------------------------------
                0.28    0.69 42831207/42831207     domain::boundingGrid(boundingBox) [4]
[13]     4.6    0.28    0.69 42831207         domain::mapHigh(boundingBox, double, double) [13]
                0.25    0.24 256757990/536038890     boundingBox::getLowPoint() [12]
                0.09    0.00 128379993/1301666138     point::getX() [14]
                0.08    0.00 128377997/1285225139     point::getY() [18]
                0.05    0.00 42831207/85662414     gridElement::gridElement(int, int) [37]
-----------------------------------------------
                0.00    0.00      18/1301666138     domain::generateIntersection() [1]
                0.00    0.00  409600/1301666138     domain::initTriangulateAdvance() [2]
                0.00    0.00  425980/1301666138     domain::basicTriangulate(point) [3]
                0.01    0.00 11523309/1301666138     triangle::colinear() [46]
                0.01    0.00 12428094/1301666138     coorX_comparison(void const*, void const*) [50]
                0.02    0.00 32430981/1301666138     domain::storeActiveParitions(int*, int, unsigned int) [21]
                0.06    0.00 85662414/1301666138     domain::boundingGrid(boundingBox) [4]
                0.08    0.00 114145906/1301666138     triangle::intersect(boundingBox) [20]
                0.09    0.00 128379993/1301666138     domain::mapHigh(boundingBox, double, double) [13]
                0.17    0.00 254028558/1301666138     triangle::computeCenterRadius() [17]
                0.17    0.00 256846404/1301666138     domain::mapLow(boundingBox, double, double) [9]
                0.27    0.00 405384881/1301666138     triangle::circumCircleContains(point) [11]
[14]     4.2    0.88    0.00 1301666138         point::getX() [14]
-----------------------------------------------
                0.00    0.00      12/450605716     domain::generateIntersection() [1]
                0.02    0.02 22427168/450605716     triangle::intersect(boundingBox) [20]
                0.08    0.08 85662414/450605716     domain::boundingGrid(boundingBox) [4]
                0.33    0.31 342516122/450605716     domain::mapLow(boundingBox, double, double) [9]
[15]     4.0    0.43    0.41 450605716         boundingBox::getHighPoint() [15]
                0.41    0.00 450605716/2643947472     point::point(point const&) [6]
-----------------------------------------------
                                                 <spontaneous>
[16]     3.9    0.10    0.71                 domain::processDelaunayMPI(int) [16]
                0.32    0.06      34/34          domain::storeActiveParitions(int*, int, unsigned int) [21]
                0.33    0.00   16384/16384       std::list<unsigned int, std::allocator<unsigned int> >::operator=(std::list<unsigned int, std::allocator<unsigned int> > const&) [24]
                0.00    0.00      68/68          GetWallClockTime() [84]
                0.00    0.00      68/68          domain::addFile(std::string, std::string, std::string) [85]
                0.00    0.00      34/34          domain::storeActiveParitionInfo(int, int*, int*, int*) [88]
                0.00    0.00      34/34          domain::runDelaunayMPI(int) [86]
                0.00    0.00      34/34          domain::collectStoreTriangleIds() [87]
-----------------------------------------------
                0.00    0.00       2/84676186     domain::domain(double, double, double, double, std::string) [51]
                0.04    0.03 7682206/84676186     domain::basicTriangulate(point) [3]
                0.19    0.13 34162771/84676186     domain::updateTriangleArr() [5]
                0.24    0.16 42831207/84676186     domain::generateIntersection() [1]
[17]     3.8    0.48    0.33 84676186         triangle::computeCenterRadius() [17]
                0.17    0.00 254028558/1301666138     point::getX() [14]
                0.15    0.00 254028558/1285225139     point::getY() [18]
-----------------------------------------------
                0.00    0.00      18/1285225139     domain::generateIntersection() [1]
                0.00    0.00  409600/1285225139     domain::initTriangulateAdvance() [2]
                0.01    0.00 11523309/1285225139     triangle::colinear() [46]
                0.02    0.00 32430981/1285225139     domain::storeActiveParitions(int*, int, unsigned int) [21]
                0.05    0.00 85662414/1285225139     domain::boundingGrid(boundingBox) [4]
                0.07    0.00 110546369/1285225139     triangle::intersect(boundingBox) [20]
                0.08    0.00 128377997/1285225139     domain::mapHigh(boundingBox, double, double) [13]
                0.15    0.00 254028558/1285225139     triangle::computeCenterRadius() [17]
                0.16    0.00 256861012/1285225139     domain::mapLow(boundingBox, double, double) [9]
                0.25    0.00 405384881/1285225139     triangle::circumCircleContains(point) [11]
[18]     3.7    0.78    0.00 1285225139         point::getY() [18]
-----------------------------------------------
                                                 <spontaneous>
[19]     3.7    0.72    0.06                 domain::generateConflictPartitions() [19]
                0.06    0.00   98304/98304       std::list<unsigned int, std::allocator<unsigned int> >::sort() [41]
-----------------------------------------------
                0.14    0.38 22427168/22427168     domain::generateIntersection() [1]
[20]     2.5    0.14    0.38 22427168         triangle::intersect(boundingBox) [20]
                0.11    0.00 122183064/2643947472     point::point(point const&) [6]
                0.08    0.00 114145906/1301666138     point::getX() [14]
                0.07    0.00 110546369/1285225139     point::getY() [18]
                0.02    0.02 22427168/536038890     boundingBox::getLowPoint() [12]
                0.02    0.02 22427168/450605716     boundingBox::getHighPoint() [15]
                0.04    0.00 32474392/118136808     point::point(double, double) [31]
-----------------------------------------------
                0.32    0.06      34/34          domain::processDelaunayMPI(int) [16]
[21]     1.8    0.32    0.06      34         domain::storeActiveParitions(int*, int, unsigned int) [21]
                0.02    0.00 32430981/1301666138     point::getX() [14]
                0.02    0.00 32430981/104947443     point::getId() [40]
                0.02    0.00 32430981/1285225139     point::getY() [18]
-----------------------------------------------
                0.24    0.13 42831207/42831207     domain::generateIntersection() [1]
[22]     1.7    0.24    0.13 42831207         triangle::triangle(triangle const&) [22]
                0.13    0.00 128493621/342365957     point::point() [23]
-----------------------------------------------
                0.00    0.00       4/342365957     domain::domain(double, double, double, double, std::string) [51]
                0.00    0.00  425980/342365957     domain::initTriangulateAdvance() [2]
                0.00    0.00 2459130/342365957     domain::triangleTransform() [35]
                0.01    0.00 10443116/342365957     edge::edge(edge const&) [44]
                0.01    0.00 11523315/342365957     triangle::triangle(point const&, point const&, point const&) [45]
                0.02    0.00 18125322/342365957     edge::edge(point const&, point const&) [42]
                0.04    0.00 44854336/342365957     boundingBox::boundingBox(double, double, double, double) [33]
                0.12    0.00 126041133/342365957     domain::updateTriangleArr() [5]
                0.13    0.00 128493621/342365957     triangle::triangle(triangle const&) [22]
[23]     1.6    0.34    0.00 342365957         point::point() [23]
-----------------------------------------------
                0.33    0.00   16384/16384       domain::processDelaunayMPI(int) [16]
[24]     1.6    0.33    0.00   16384         std::list<unsigned int, std::allocator<unsigned int> >::operator=(std::list<unsigned int, std::allocator<unsigned int> > const&) [24]
-----------------------------------------------
                0.30    0.00 406203483/406203483     domain::basicTriangulate(point) [3]
[25]     1.4    0.30    0.00 406203483         triangle::getFarestCoorX() [25]
-----------------------------------------------
                                                 <spontaneous>
[26]     1.4    0.29    0.00                 domain::generateActivePartitions() [26]
                0.00    0.00   16384/16384       std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int const&>(int const&) [83]
-----------------------------------------------
                0.28    0.00 638907036/638907036     edge::operator==(edge const&) [7]
[27]     1.3    0.28    0.00 638907036         point::operator==(point) [27]
-----------------------------------------------
                0.25    0.00 102488313/102488313     domain::updateTriangleArr() [5]
[28]     1.2    0.25    0.00 102488313         point::set(point) [28]
-----------------------------------------------
                0.02    0.00 42831207/342649656     gridBound::gridBound(gridElement, gridElement) [43]
                0.05    0.00 85662414/342649656     gridBound::getLowGridElement() [32]
                0.05    0.00 85662414/342649656     gridBound::getHighGridElement() [30]
                0.07    0.00 128493621/342649656     domain::boundingGrid(boundingBox) [4]
[29]     0.9    0.20    0.00 342649656         gridElement::gridElement(gridElement const&) [29]
-----------------------------------------------
                0.15    0.05 85662414/85662414     domain::generateIntersection() [1]
[30]     0.9    0.15    0.05 85662414         gridBound::getHighGridElement() [30]
                0.05    0.00 85662414/342649656     gridElement::gridElement(gridElement const&) [29]
-----------------------------------------------
                0.00    0.00       2/118136808     domain::domain(double, double, double, double, std::string) [51]
                0.04    0.00 32474392/118136808     triangle::intersect(boundingBox) [20]
                0.11    0.00 85662414/118136808     domain::generateIntersection() [1]
[31]     0.7    0.15    0.00 118136808         point::point(double, double) [31]
-----------------------------------------------
                0.10    0.05 85662414/85662414     domain::generateIntersection() [1]
[32]     0.7    0.10    0.05 85662414         gridBound::getLowGridElement() [32]
                0.05    0.00 85662414/342649656     gridElement::gridElement(gridElement const&) [29]
-----------------------------------------------
                0.08    0.06 22427168/22427168     domain::generateIntersection() [1]
[33]     0.6    0.08    0.06 22427168         boundingBox::boundingBox(double, double, double, double) [33]
                0.04    0.00 44854336/342365957     point::point() [23]
                0.01    0.00 22427168/45280318     point::setY(double) [52]
                0.00    0.00 44854336/45280318     point::setX(double) [68]
-----------------------------------------------
                0.10    0.00 85662414/85662414     domain::generateIntersection() [1]
[34]     0.5    0.10    0.00 85662414         gridElement::getY() [34]
-----------------------------------------------
                                                 <spontaneous>
[35]     0.4    0.06    0.03                 domain::triangleTransform() [35]
                0.03    0.00       1/1           size(triangleNode*) [49]
                0.00    0.00 2459130/342365957     point::point() [23]
                0.00    0.00       1/1           addLinkList(triangleNode*&, triangleNode*&) [100]
-----------------------------------------------
                0.09    0.00 85662414/85662414     domain::generateIntersection() [1]
[36]     0.4    0.09    0.00 85662414         gridElement::getX() [36]
-----------------------------------------------
                0.05    0.00 42831207/85662414     domain::mapHigh(boundingBox, double, double) [13]
                0.05    0.00 42831207/85662414     domain::mapLow(boundingBox, double, double) [9]
[37]     0.4    0.09    0.00 85662414         gridElement::gridElement(int, int) [37]
-----------------------------------------------
                0.04    0.04 42831207/42831207     domain::generateIntersection() [1]
[38]     0.4    0.04    0.04 42831207         boundingBox::boundingBox(point, point) [38]
                0.04    0.00 42831207/2643947472     point::point(point const&) [6]
-----------------------------------------------
                0.00    0.00       6/102488319     domain::domain(double, double, double, double, std::string) [51]
                0.08    0.00 102488313/102488319     domain::updateTriangleArr() [5]
[39]     0.4    0.08    0.00 102488319         point::point(double, double, unsigned long long) [39]
-----------------------------------------------
                0.00    0.00    6642/104947443     domain::storeAllTriangles() [69]
                0.02    0.00 32430981/104947443     domain::storeActiveParitions(int*, int, unsigned int) [21]
                0.05    0.00 72509820/104947443     domain::deliverTriangles() [10]
[40]     0.3    0.07    0.00 104947443         point::getId() [40]
-----------------------------------------------
                0.06    0.00   98304/98304       domain::generateConflictPartitions() [19]
[41]     0.3    0.06    0.00   98304         std::list<unsigned int, std::allocator<unsigned int> >::sort() [41]
-----------------------------------------------
                0.01    0.01 3020887/9062661     triangle::getEdge1() [57]
                0.01    0.01 3020887/9062661     triangle::getEdge2() [58]
                0.01    0.01 3020887/9062661     triangle::getEdge3() [59]
[42]     0.3    0.04    0.02 9062661         edge::edge(point const&, point const&) [42]
                0.02    0.00 18125322/342365957     point::point() [23]
-----------------------------------------------
                0.03    0.02 42831207/42831207     domain::boundingGrid(boundingBox) [4]
[43]     0.3    0.03    0.02 42831207         gridBound::gridBound(gridElement, gridElement) [43]
                0.02    0.00 42831207/342649656     gridElement::gridElement(gridElement const&) [29]
-----------------------------------------------
                0.04    0.01 5221558/5221558     domain::basicTriangulate(point) [3]
[44]     0.2    0.04    0.01 5221558         edge::edge(edge const&) [44]
                0.01    0.00 10443116/342365957     point::point() [23]
-----------------------------------------------
                0.00    0.00       2/3841105     domain::domain(double, double, double, double, std::string) [51]
                0.03    0.01 3841103/3841105     domain::basicTriangulate(point) [3]
[45]     0.2    0.03    0.01 3841105         triangle::triangle(point const&, point const&, point const&) [45]
                0.01    0.00 11523315/342365957     point::point() [23]
-----------------------------------------------
                0.02    0.01 3841103/3841103     domain::basicTriangulate(point) [3]
[46]     0.2    0.02    0.01 3841103         triangle::colinear() [46]
                0.01    0.00 11523309/1301666138     point::getX() [14]
                0.01    0.00 11523309/1285225139     point::getY() [18]
-----------------------------------------------
                0.03    0.00 14284219/14284219     domain::basicTriangulate(point) [3]
[47]     0.1    0.03    0.00 14284219         createNewNode(edge*) [47]
-----------------------------------------------
                0.03    0.00  851960/851960      domain::basicTriangulate(point) [3]
[48]     0.1    0.03    0.00  851960         removeLinkList(edgeNode*&) [48]
-----------------------------------------------
                0.03    0.00       1/1           domain::triangleTransform() [35]
[49]     0.1    0.03    0.00       1         size(triangleNode*) [49]
-----------------------------------------------
                                                 <spontaneous>
[50]     0.1    0.02    0.01                 coorX_comparison(void const*, void const*) [50]
                0.01    0.00 12428094/1301666138     point::getX() [14]
-----------------------------------------------
                                                 <spontaneous>
[51]     0.1    0.00    0.02                 domain::domain(double, double, double, double, std::string) [51]
                0.02    0.00       1/1           boundingBox::setHighPoint(point) [55]
                0.00    0.00       2/84676186     triangle::computeCenterRadius() [17]
                0.00    0.00       2/3841105     triangle::triangle(point const&, point const&, point const&) [45]
                0.00    0.00       6/102488319     point::point(double, double, unsigned long long) [39]
                0.00    0.00       4/342365957     point::point() [23]
                0.00    0.00       2/118136808     point::point(double, double) [31]
                0.00    0.00       2/45280318     point::setY(double) [52]
                0.00    0.00       2/45280318     point::setX(double) [68]
                0.00    0.00   16384/16384       partition::partition() [81]
                0.00    0.00       2/4659199     insertFront(triangleNode*&, triangleNode*) [78]
                0.00    0.00       1/1           boundingBox::setLowPoint(point) [101]
                0.00    0.00       1/1           domain::readPointPartFileInfo() [102]
-----------------------------------------------
                0.00    0.00       2/45280318     domain::domain(double, double, double, double, std::string) [51]
                0.00    0.00  425980/45280318     domain::initTriangulateAdvance() [2]
                0.01    0.00 22427168/45280318     boundingBox::boundingBox(double, double, double, double) [33]
                0.01    0.00 22427168/45280318     domain::generateIntersection() [1]
[52]     0.1    0.02    0.00 45280318         point::setY(double) [52]
-----------------------------------------------
                0.02    0.00 3840595/3840595     domain::basicTriangulate(point) [3]
[53]     0.1    0.02    0.00 3840595         createNewNode(triangle*) [53]
-----------------------------------------------
                0.02    0.00  425980/425980      domain::initTriangulateAdvance() [2]
[54]     0.1    0.02    0.00  425980         point::setId(unsigned long long) [54]
-----------------------------------------------
                0.02    0.00       1/1           domain::domain(double, double, double, double, std::string) [51]
[55]     0.1    0.02    0.00       1         boundingBox::setHighPoint(point) [55]
-----------------------------------------------
                                                 <spontaneous>
[56]     0.1    0.02    0.00                 removeLinkList(triangleNode*&) [56]
-----------------------------------------------
                0.00    0.02 3020887/3020887     domain::basicTriangulate(point) [3]
[57]     0.1    0.00    0.02 3020887         triangle::getEdge1() [57]
                0.01    0.01 3020887/9062661     edge::edge(point const&, point const&) [42]
-----------------------------------------------
                0.00    0.02 3020887/3020887     domain::basicTriangulate(point) [3]
[58]     0.1    0.00    0.02 3020887         triangle::getEdge2() [58]
                0.01    0.01 3020887/9062661     edge::edge(point const&, point const&) [42]
-----------------------------------------------
                0.00    0.02 3020887/3020887     domain::basicTriangulate(point) [3]
[59]     0.1    0.00    0.02 3020887         triangle::getEdge3() [59]
                0.01    0.01 3020887/9062661     edge::edge(point const&, point const&) [42]
-----------------------------------------------
                                                 <spontaneous>
[60]     0.1    0.02    0.00                 triangle::area() [60]
-----------------------------------------------
                                                 <spontaneous>
[61]     0.1    0.02    0.00                 triangle::inside(boundingBox) [61]
-----------------------------------------------
                                                 <spontaneous>
[62]     0.1    0.02    0.00                 gridBound::elementCount() [62]
-----------------------------------------------
                0.01    0.00 5221558/5221558     domain::basicTriangulate(point) [3]
[63]     0.0    0.01    0.00 5221558         removeNode(edgeNode*&, edgeNode*&, edgeNode*&) [63]
-----------------------------------------------
                0.01    0.00 3020887/3020887     domain::basicTriangulate(point) [3]
[64]     0.0    0.01    0.00 3020887         removeNode(triangleNode*&, triangleNode*&, triangleNode*&) [64]
-----------------------------------------------
                                                 <spontaneous>
[65]     0.0    0.01    0.00                 gridElement::setY(int) [65]
-----------------------------------------------
                                                 <spontaneous>
[66]     0.0    0.01    0.00                 domain::drawActivePartTriangles() [66]
-----------------------------------------------
                                                 <spontaneous>
[67]     0.0    0.01    0.00                 std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf() [67]
-----------------------------------------------
                0.00    0.00       2/45280318     domain::domain(double, double, double, double, std::string) [51]
                0.00    0.00  425980/45280318     domain::initTriangulateAdvance() [2]
                0.00    0.00 44854336/45280318     boundingBox::boundingBox(double, double, double, double) [33]
[68]     0.0    0.01    0.00 45280318         point::setX(double) [68]
-----------------------------------------------
                                                 <spontaneous>
[69]     0.0    0.00    0.00                 domain::storeAllTriangles() [69]
                0.00    0.00    6642/104947443     point::getId() [40]
-----------------------------------------------
                0.00    0.00 14284219/14284219     domain::basicTriangulate(point) [3]
[77]     0.0    0.00    0.00 14284219         insertFront(edgeNode*&, edgeNode*) [77]
-----------------------------------------------
                0.00    0.00       2/4659199     domain::domain(double, double, double, double, std::string) [51]
                0.00    0.00 4659197/4659199     domain::basicTriangulate(point) [3]
[78]     0.0    0.00    0.00 4659199         insertFront(triangleNode*&, triangleNode*) [78]
-----------------------------------------------
                0.00    0.00 3840595/3840595     domain::basicTriangulate(point) [3]
[79]     0.0    0.00    0.00 3840595         triangle::isBad() [79]
-----------------------------------------------
                0.00    0.00  818602/818602      domain::basicTriangulate(point) [3]
[80]     0.0    0.00    0.00  818602         extractNode(triangleNode*&, triangleNode*, triangleNode*&) [80]
-----------------------------------------------
                0.00    0.00   16384/16384       domain::domain(double, double, double, double, std::string) [51]
[81]     0.0    0.00    0.00   16384         partition::partition() [81]
-----------------------------------------------
                0.00    0.00   16384/16384       domain::~domain() [130]
[82]     0.0    0.00    0.00   16384         partition::~partition() [82]
-----------------------------------------------
                0.00    0.00   16384/16384       domain::generateActivePartitions() [26]
[83]     0.0    0.00    0.00   16384         std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int const&>(int const&) [83]
-----------------------------------------------
                0.00    0.00      68/68          domain::processDelaunayMPI(int) [16]
[84]     0.0    0.00    0.00      68         GetWallClockTime() [84]
-----------------------------------------------
                0.00    0.00      68/68          domain::processDelaunayMPI(int) [16]
[85]     0.0    0.00    0.00      68         domain::addFile(std::string, std::string, std::string) [85]
-----------------------------------------------
                0.00    0.00      34/34          domain::processDelaunayMPI(int) [16]
[86]     0.0    0.00    0.00      34         domain::runDelaunayMPI(int) [86]
                0.00    0.00      34/34          std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [89]
-----------------------------------------------
                0.00    0.00      34/34          domain::processDelaunayMPI(int) [16]
[87]     0.0    0.00    0.00      34         domain::collectStoreTriangleIds() [87]
-----------------------------------------------
                0.00    0.00      34/34          domain::processDelaunayMPI(int) [16]
[88]     0.0    0.00    0.00      34         domain::storeActiveParitionInfo(int, int*, int*, int*) [88]
-----------------------------------------------
                0.00    0.00      34/34          domain::runDelaunayMPI(int) [86]
[89]     0.0    0.00    0.00      34         std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...) [89]
-----------------------------------------------
                                1441             std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [90]
                0.00    0.00       1/7           domain::~domain() [130]
                0.00    0.00       6/7           domain::updateTriangleArr() [5]
[90]     0.0    0.00    0.00       7+1441    std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [90]
                                1441             std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*) [90]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [146]
[91]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z13createNewNodeP4edge [91]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [146]
[92]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN11boundingBoxC2E5pointS0_ [92]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [146]
[93]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4edgeC2ERK5pointS2_ [93]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [146]
[94]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5pointC2Eddy [94]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [146]
[95]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN6domainC2EddddSs [95]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [146]
[96]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN9gridBoundC2E11gridElementS0_ [96]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [146]
[97]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN9partitionC2Ev [97]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [146]
[98]     0.0    0.00    0.00       1         _GLOBAL__sub_I_main [98]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [146]
[99]     0.0    0.00    0.00       1         _GLOBAL__sub_I_max [99]
-----------------------------------------------
                0.00    0.00       1/1           domain::triangleTransform() [35]
[100]    0.0    0.00    0.00       1         addLinkList(triangleNode*&, triangleNode*&) [100]
-----------------------------------------------
                0.00    0.00       1/1           domain::domain(double, double, double, double, std::string) [51]
[101]    0.0    0.00    0.00       1         boundingBox::setLowPoint(point) [101]
-----------------------------------------------
                0.00    0.00       1/1           domain::domain(double, double, double, double, std::string) [51]
[102]    0.0    0.00    0.00       1         domain::readPointPartFileInfo() [102]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [91] _GLOBAL__sub_I__Z13createNewNodeP4edge [29] gridElement::gridElement(gridElement const&) [26] domain::generateActivePartitions()
  [92] _GLOBAL__sub_I__ZN11boundingBoxC2E5pointS0_ [37] gridElement::gridElement(int, int) [8] domain::updateConflictPartitions()
  [93] _GLOBAL__sub_I__ZN4edgeC2ERK5pointS2_ [42] edge::edge(point const&, point const&) [19] domain::generateConflictPartitions()
  [94] _GLOBAL__sub_I__ZN5pointC2Eddy [44] edge::edge(edge const&) [9] domain::mapLow(boundingBox, double, double)
  [95] _GLOBAL__sub_I__ZN6domainC2EddddSs [7] edge::operator==(edge const&) [85] domain::addFile(std::string, std::string, std::string)
  [96] _GLOBAL__sub_I__ZN9gridBoundC2E11gridElementS0_ [28] point::set(point) [13] domain::mapHigh(boundingBox, double, double)
  [97] _GLOBAL__sub_I__ZN9partitionC2Ev [14] point::getX() [25] triangle::getFarestCoorX()
  [98] _GLOBAL__sub_I_main    [18] point::getY()          [17] triangle::computeCenterRadius()
  [99] _GLOBAL__sub_I_max     [68] point::setX(double)    [11] triangle::circumCircleContains(point)
  [64] removeNode(triangleNode*&, triangleNode*&, triangleNode*&) [52] point::setY(double) [60] triangle::area()
  [63] removeNode(edgeNode*&, edgeNode*&, edgeNode*&) [40] point::getId() [79] triangle::isBad()
 [100] addLinkList(triangleNode*&, triangleNode*&) [54] point::setId(unsigned long long) [61] triangle::inside(boundingBox)
  [80] extractNode(triangleNode*&, triangleNode*, triangleNode*&) [6] point::point(point const&) [46] triangle::colinear()
  [78] insertFront(triangleNode*&, triangleNode*) [23] point::point() [57] triangle::getEdge1()
  [77] insertFront(edgeNode*&, edgeNode*) [31] point::point(double, double) [58] triangle::getEdge2()
  [47] createNewNode(edge*)   [39] point::point(double, double, unsigned long long) [59] triangle::getEdge3()
  [53] createNewNode(triangle*) [27] point::operator==(point) [20] triangle::intersect(boundingBox)
  [56] removeLinkList(triangleNode*&) [4] domain::boundingGrid(boundingBox) [22] triangle::triangle(triangle const&)
  [48] removeLinkList(edgeNode*&) [86] domain::runDelaunayMPI(int) [45] triangle::triangle(point const&, point const&, point const&)
  [84] GetWallClockTime()      [3] domain::basicTriangulate(point) [89] std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
  [50] coorX_comparison(void const*, void const*) [10] domain::deliverTriangles() [62] gridBound::elementCount()
  [49] size(triangleNode*)    [35] domain::triangleTransform() [32] gridBound::getLowGridElement()
  [12] boundingBox::getLowPoint() [5] domain::updateTriangleArr() [30] gridBound::getHighGridElement()
 [101] boundingBox::setLowPoint(point) [16] domain::processDelaunayMPI(int) [43] gridBound::gridBound(gridElement, gridElement)
  [15] boundingBox::getHighPoint() [1] domain::generateIntersection() [81] partition::partition()
  [55] boundingBox::setHighPoint(point) [21] domain::storeActiveParitions(int*, int, unsigned int) [82] partition::~partition()
  [38] boundingBox::boundingBox(point, point) [102] domain::readPointPartFileInfo() [67] std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
  [33] boundingBox::boundingBox(double, double, double, double) [2] domain::initTriangulateAdvance() [41] std::list<unsigned int, std::allocator<unsigned int> >::sort()
  [36] gridElement::getX()    [87] domain::collectStoreTriangleIds() [24] std::list<unsigned int, std::allocator<unsigned int> >::operator=(std::list<unsigned int, std::allocator<unsigned int> > const&)
  [34] gridElement::getY()    [66] domain::drawActivePartTriangles() [83] std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int const&>(int const&)
  [65] gridElement::setY(int) [88] domain::storeActiveParitionInfo(int, int*, int*, int*) [90] std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
