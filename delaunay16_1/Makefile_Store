CXX = mpic++

EXE = TIPP
BUILD_DIR = build

SRC = $(wildcard *.cpp) $(wildcard **/*.cpp)
#OBJ = $(patsubst %.cpp, $(BUILD_DIR)/%.o, $(SRC))
OBJ = $($(BUILD_DIR)/%.o)
#CXXFLAGS = -std=gnu++11 -Wall -pg
CXXFLAGS = -std=gnu++11
all: $(EXE)

#$(EXE): $(BUILD_DIR)/*.o
#	$(CXX) $(CXXFLAGS) -o $@ $^

$(EXE): $(BUILD_DIR)/delaunay2DMain.o $(BUILD_DIR)/delaunayMPI.o $(BUILD_DIR)/domain.o $(BUILD_DIR)/coarsePartition.o $(BUILD_DIR)/partition.o $(BUILD_DIR)/triangle.o $(BUILD_DIR)/boundingBox.o $(BUILD_DIR)/gridBound.o $(BUILD_DIR)/gridElement.o $(BUILD_DIR)/linkList.o $(BUILD_DIR)/edge.o $(BUILD_DIR)/common.o $(BUILD_DIR)/point.o
	$(CXX) $(CXXFLAGS) -o $@ $^

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $^ -o $(BUILD_DIR)/$@

delaunay2DMain.o: delaunay2DMain.cpp
	$(CXX) -c -o $(BUILD_DIR)/$@ $< $(CXXFLAGS)

coarsePartition.o: coarsePartition.cpp coarsePartition.h
	$(CXX) -c -o $(BUILD_DIR)/$@ $^ $(CXXFLAGS)

delaunayMPI.o: delaunayMPI.cpp delaunayMPI.h
	$(CXX) -c -o $(BUILD_DIR)/$@ $^ $(CXXFLAGS) 

domain.o: domain.cpp domain.h
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

partition.o: partition.cpp partition.h
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

triangle.o: triangle.cpp triangle.h
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

boundingBox.o: boundingBox.cpp boundingBox.h
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

gridBound.o: gridBound.cpp gridBound.h
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

gridElement.o: gridElement.cpp
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

edge.o: edge.cpp edge.h
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

linkList.o: linkList.cpp linkList.h
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

common.o: common.cpp common.h 
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

point.o: point.cpp point.h
	$(CXX) $(CXXFLAGS) -o $(BUILD_DIR)/$@ -c $^

dir:
	mkdir -p $(BUILD_DIR)

clean:
	rm -rf $(EXE) $(BUILD_DIR)/*


#	mpic++ -o build/delaunay2DMain.o -c  delaunay2DMain.cpp
#	mpic++ -o build/delaunayMPI.o -c  delaunayMPI.cpp
#	mpic++ -o build/domain.o -c  domain.cpp
#	mpic++ -o build/coarsePartition.o -c  coarsePartition.cpp
#mpic++ -o build/coarsePartition.o -c  coarsePartition.cpp

#mpic++ -std=gnu++11 linkList.cpp common.cpp point.cpp edge.cpp triangle.cpp gridElement.cpp gridBound.cpp boundingBox.cpp partition.cpp domain.cpp delaunayMPI.cpp coarsePartition.cpp delaunay2DMain.cpp -o delaunay2DMain
